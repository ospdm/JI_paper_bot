# commands/vacation.py

import re
import datetime
import asyncio
import logging

import config  # DEVELOPMENT_GUILD_ID, EMBLEM_URL
import discord
from discord import app_commands
from discord.ext import commands

from roles.constants import (
    vacation_id,
    arc_id, lrc_gimel_id, lrc_id,
    head_ji_id, adjutant_ji_id,
    leader_office_id, leader_penal_battalion_id,
    senate_id,
    director_office_id, leader_main_corps_id, leader_gimel_id,
    master_office_id, worker_office_id,
)
from database import get_db, User, Vacation

# –†–æ–ª–∏, –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å /vacation
ALLOWED_ISSUER_ROLES = [
    arc_id, lrc_gimel_id, lrc_id,
    head_ji_id, adjutant_ji_id,
    leader_office_id, leader_penal_battalion_id,
    senate_id,
    director_office_id, leader_main_corps_id, leader_gimel_id,
    master_office_id, worker_office_id,
]

# –ö–∞—Ä—Ç–∏–Ω–∫–∞-–±–∞–Ω–Ω–µ—Ä, –≤—ã–≤–æ–¥–∏–º–∞—è –≤–Ω–∏–∑—É —ç–º–±–µ–¥–æ–≤
VACATION_BANNER_URL = (
    "https://cdn.discordapp.com/attachments/"
    "1384127668391510070/1385716749281792152/image.png"
)


class VacationCog(commands.Cog):
    """
    Cog –¥–ª—è –≤—ã–¥–∞—á–∏ –æ—Ç–ø—É—Å–∫–Ω–æ–π —Ä–æ–ª–∏ —á–µ—Ä–µ–∑ —Å–ª—ç—à:
      ‚Ä¢ /vacation member:<@user> duration:<X–¥Y—áZ–º>
    """
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    async def _send_embed(self, send: callable, *, title: str, description: str, ephemeral: bool):
        em = discord.Embed(
            title=title,
            description=description,
            color=discord.Color.from_rgb(255, 255, 255),
            timestamp=datetime.datetime.utcnow()
        )
        em.set_thumbnail(url=config.EMBLEM_URL)
        em.set_image(url=VACATION_BANNER_URL)
        await send(embed=em, ephemeral=ephemeral)

    async def _do_vacation(self, member: discord.Member, duration: str, send: callable):
        # 1) –ü–∞—Ä—Å–∏–º —Ä—É—Å—Å–∫–∏–µ —Å—É—Ñ—Ñ–∏–∫—Å—ã: X–¥Y—áZ–º
        m = re.fullmatch(
            r'(?:(?P<days>\d+)–¥)?(?:(?P<hours>\d+)—á)?(?:(?P<minutes>\d+)–º)?',
            duration
        )
        if not m or all(v is None for v in m.groupdict().values()):
            return await self._send_embed(
                send,
                title="‚ùó –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞",
                description="–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ü—Ä–∏–º–µ—Ä: `2–¥5—á30–º`, `3–¥`, `4—á` –∏–ª–∏ `45–º`.",
                ephemeral=True
            )
        days    = int(m.group('days') or 0)
        hours   = int(m.group('hours') or 0)
        minutes = int(m.group('minutes') or 0)
        total_seconds = days*86400 + hours*3600 + minutes*60
        if total_seconds <= 0:
            return await self._send_embed(
                send,
                title="‚ùó –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞",
                description="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è.",
                ephemeral=True
            )

        # 2) –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –æ—Ç–ø—É—Å–∫–∞
        role = member.guild.get_role(vacation_id)
        if not role:
            return await self._send_embed(
                send,
                title="‚ùó –†–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
                description="–†–æ–ª—å –æ—Ç–ø—É—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.",
                ephemeral=True
            )

        # 3) –í—ã–¥–∞—ë–º —Ä–æ–ª—å
        try:
            await member.add_roles(role, reason=f"–û—Ç–ø—É—Å–∫ –Ω–∞ {duration}")
        except discord.Forbidden:
            return await self._send_embed(
                send,
                title="‚ùó –ù–µ—Ç –ø—Ä–∞–≤",
                description="–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç—Ç–æ–π —Ä–æ–ª—å—é.",
                ephemeral=True
            )
        except Exception as e:
            logging.exception("–û—à–∏–±–∫–∞ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏ –æ—Ç–ø—É—Å–∫–∞")
            return await self._send_embed(
                send,
                title="‚ùó –û—à–∏–±–∫–∞",
                description=f"–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å —Ä–æ–ª—å –æ—Ç–ø—É—Å–∫–∞: {e}",
                ephemeral=True
            )

        # 4) –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å –≤ –ë–î
        db = next(get_db())
        try:
            user = db.query(User).filter_by(discord_id=member.id).first()
            if not user:
                user = User(discord_id=member.id)
                db.add(user)
                db.flush()
            now = datetime.datetime.utcnow()
            vac = Vacation(
                user_id=user.id,
                start_at=now,
                end_at=now + datetime.timedelta(seconds=total_seconds),
                active=True
            )
            db.add(vac)
            db.commit()
        except Exception:
            logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –æ—Ç–ø—É—Å–∫–∞ –≤ –ë–î")
        finally:
            db.close()

        # 5) –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä—É
        await self._send_embed(
            send,
            title="üèñÔ∏è –û—Ç–ø—É—Å–∫ –≤—ã–¥–∞–Ω",
            description=(
                f"–†–æ–ª—å **{role.name}** –≤—ã–¥–∞–Ω–∞ {member.mention} –Ω–∞ **{duration}**.\n"
                f"–ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞ –∏ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã—Ç–∞ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å—Ä–æ–∫–∞."
            ),
            ephemeral=False
        )

        # 6) –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–Ω—è—Ç–∏—è
        async def _remove():
            await asyncio.sleep(total_seconds)
            try:
                await member.remove_roles(role, reason="–ò—Å—Ç—ë–∫ —Å—Ä–æ–∫ –æ—Ç–ø—É—Å–∫–∞")
                # —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–Ω—è—Ç–∏–∏ —Ä–æ–ª–∏
                await self._send_embed(
                    send,
                    title="‚åõ –û—Ç–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à—ë–Ω",
                    description=f"–†–æ–ª—å **{role.name}** —Å–Ω—è—Ç–∞ —Å {member.mention}. –ü—Ä–∏—è—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã!",
                    ephemeral=False
                )
                # –∑–∞–∫—Ä—ã–≤–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –ë–î
                db2 = next(get_db())
                try:
                    u2 = db2.query(User).filter_by(discord_id=member.id).first()
                    if u2:
                        last = (
                            db2.query(Vacation)
                               .filter_by(user_id=u2.id, active=True)
                               .order_by(Vacation.start_at.desc())
                               .first()
                        )
                        if last:
                            last.active = False
                            last.end_at = datetime.datetime.utcnow()
                            db2.commit()
                except Exception:
                    logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –∑–∞–ø–∏—Å–∏ –æ—Ç–ø—É—Å–∫–∞ –≤ –ë–î")
                finally:
                    db2.close()
            except Exception:
                logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ —Ä–æ–ª–∏ –æ—Ç–ø—É—Å–∫–∞ –ø–æ—Å–ª–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å—Ä–æ–∫–∞")

        self.bot.loop.create_task(_remove())

    @app_commands.guilds(discord.Object(id=config.DEVELOPMENT_GUILD_ID))
    @app_commands.command(
        name="vacation",
        description="–í—ã–¥–∞—Ç—å –æ—Ç–ø—É—Å–∫–Ω—É—é —Ä–æ–ª—å –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è (e.g. 2–¥5—á –∏–ª–∏ 45–º)"
    )
    @app_commands.describe(
        member="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã–¥–∞—ë—Ç—Å—è –æ—Ç–ø—É—Å–∫",
        duration="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: X–¥Y—áZ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä 2–¥5—á –∏–ª–∏ 45–º"
    )
    @app_commands.checks.has_any_role(*ALLOWED_ISSUER_ROLES)
    async def vacation(
        self,
        interaction: discord.Interaction,
        member: discord.Member,
        duration: str
    ):
        """
        /vacation @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å duration:<X–¥Y—áZ–º>
        """
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –±–æ—Ç–∞ –µ—Å—Ç—å –ø—Ä–∞–≤–æ Manage Roles
        bot_member = interaction.guild.get_member(self.bot.user.id)  # type: ignore
        if not bot_member.guild_permissions.manage_roles:
            return await interaction.response.send_message(
                "‚ùó –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤–∞ **Manage Roles**, —á—Ç–æ–±—ã –≤—ã–¥–∞–≤–∞—Ç—å —Ä–æ–ª–∏.",
                ephemeral=True
            )

        await interaction.response.defer(thinking=True)
        await self._do_vacation(member, duration, interaction.followup.send)

    @vacation.error
    async def vacation_error(self, interaction: discord.Interaction, error):
        if isinstance(error, app_commands.MissingAnyRole):
            allowed = " ".join(f"<@&{rid}>" for rid in ALLOWED_ISSUER_ROLES)
            embed = discord.Embed(
                title="‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω",
                description="–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.",
                color=discord.Color.red()
            )
            embed.add_field(
                name="–î–æ—Å—Ç—É–ø –∏–º–µ—é—Ç —Å–ª–µ–¥—É—é—â–∏–µ —Ä–æ–ª–∏:",
                value=allowed or "‚Äî",
                inline=False
            )
            return await interaction.response.send_message(embed=embed, ephemeral=True)

        logging.exception("–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ vacation")
        if not interaction.response.is_done():
            await interaction.response.send_message("‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)
        else:
            await interaction.followup.send("‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)


async def setup(bot: commands.Bot):
    await bot.add_cog(VacationCog(bot))
