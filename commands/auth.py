# commands/auth.py

import re
import datetime
import logging

import discord
from discord import app_commands
from discord.ext import commands

import config  # DEVELOPMENT_GUILD_ID, EMBLEM_URL
from database import get_db, User
from roles.constants import (
    jlt_id,
    internship_id,
    wl_inquisitor_id,
    ji_id,
    NEEDS_AUTH_ROLE_ID,  # —Ä–æ–ª—å "–Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫"
)
from typing import Optional

# –ö–∞–Ω–∞–ª—ã
SUBMIT_CHANNEL_ID = 1384833941420118126  # –∫–∞–Ω–∞–ª, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∞—ë—Ç –∑–∞—è–≤–∫—É
ADMIN_CHANNEL_ID  = 1385728489755381962  # –∫–∞–Ω–∞–ª –¥–ª—è –∞–¥–º–∏–Ω–æ–≤


class AuthView(discord.ui.View):
    """View —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø—Ä–∏–Ω—è—Ç—å/–æ—Ç–∫–ª–æ–Ω–∏—Ç—å –¥–ª—è –∞–¥–º–∏–Ω–æ–≤."""

    def __init__(
        self,
        applicant: discord.Member,
        callsign: str,
        steamid: str,
        comment: str
    ):
        super().__init__(timeout=None)
        self.applicant = applicant
        self.callsign  = callsign
        self.steamid   = steamid
        self.comment   = comment

    @discord.ui.button(label="–ü—Ä–∏–Ω—è—Ç—å", style=discord.ButtonStyle.success, custom_id="auth:accept")
    async def accept(self, interaction: discord.Interaction, button: discord.ui.Button):
        guild  = interaction.guild
        member = guild.get_member(self.applicant.id)
        if not member:
            return await interaction.response.send_message(
                "‚ùó –ó–∞—è–≤–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—à—ë–ª —Å —Å–µ—Ä–≤–µ—Ä–∞.", ephemeral=True
            )

        # 1) –≤—ã–¥–∞—ë–º —Ä–æ–ª–∏ –∏ —É–±–∏—Ä–∞–µ–º NEEDS_AUTH
        roles_to_add = [
            role for role in (
                guild.get_role(jlt_id),
                guild.get_role(internship_id),
                guild.get_role(wl_inquisitor_id),
                guild.get_role(ji_id),
            ) if role
        ]
        needs = guild.get_role(NEEDS_AUTH_ROLE_ID)
        try:
            if needs and needs in member.roles:
                await member.remove_roles(needs, reason="–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞")
            if roles_to_add:
                await member.add_roles(
                    *roles_to_add,
                    reason=f"–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ–¥–æ–±—Ä–µ–Ω–∞ {interaction.user}"
                )
        except Exception:
            logging.exception("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ä–æ–ª–∏ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞—è–≤–∫–∏")

        # 2) –ø—Ä–∞–≤–∏–º embed –≤ –∞–¥–º–∏–Ω–∫–µ
        em = discord.Embed(
            title="‚úÖ –ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞",
            description=(
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {member.mention}\n"
                f"üéñÔ∏è –ü–æ–∑—ã–≤–Ω–æ–π: `{self.callsign}`\n"
                f"üîó SteamID: `{self.steamid}`\n"
                f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {self.comment}\n"
                f"‚úÖ –ü—Ä–æ–≤–µ—Ä—è—é—â–∏–π: {interaction.user.mention}"
            ),
            color=discord.Color.green(),
            timestamp=datetime.datetime.utcnow()
        )
        em.set_thumbnail(url=config.EMBLEM_URL)
        await interaction.message.edit(embed=em, view=None)

        # 3) —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        ch = guild.get_channel(SUBMIT_CHANNEL_ID)
        if isinstance(ch, discord.TextChannel):
            notify = discord.Embed(
                title="‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞",
                description=f"{member.mention}, –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º ‚Äî –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã!",
                color=discord.Color.green(),
                timestamp=datetime.datetime.utcnow()
            )
            notify.set_thumbnail(url=config.EMBLEM_URL)
            notify.add_field(name="üéñÔ∏è –ü–æ–∑—ã–≤–Ω–æ–π",    value=self.callsign, inline=True)
            notify.add_field(name="üîó SteamID",      value=self.steamid,  inline=True)
            notify.add_field(name="üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", value=self.comment,   inline=False)
            notify.add_field(name="üë§ –ü—Ä–æ–≤–µ—Ä—è—é—â–∏–π", value=interaction.user.mention, inline=False)
            await ch.send(embed=notify)

        await interaction.response.send_message("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω.", ephemeral=True)


    @discord.ui.button(label="–û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=discord.ButtonStyle.danger, custom_id="auth:reject")
    async def reject(self, interaction: discord.Interaction, button: discord.ui.Button):
        guild  = interaction.guild
        member = guild.get_member(self.applicant.id)
        if not member:
            return await interaction.response.send_message(
                "‚ùó –ó–∞—è–≤–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—à—ë–ª —Å —Å–µ—Ä–≤–µ—Ä–∞.", ephemeral=True
            )

        # 1) –≤—ã–¥–∞—ë–º —Ä–æ–ª—å "–Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π"
        needs = guild.get_role(NEEDS_AUTH_ROLE_ID)
        try:
            if needs and needs not in member.roles:
                await member.add_roles(needs, reason=f"–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ {interaction.user}")
        except Exception:
            logging.exception("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å —Ä–æ–ª—å –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ")

        # 2) –ø—Ä–∞–≤–∏–º embed –≤ –∞–¥–º–∏–Ω–∫–µ
        em = discord.Embed(
            title="‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
            description=(
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {member.mention}\n"
                f"üéñÔ∏è –ü–æ–∑—ã–≤–Ω–æ–π: `{self.callsign}`\n"
                f"üîó SteamID: `{self.steamid}`\n"
                f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {self.comment}\n"
                f"‚ùå –ü—Ä–æ–≤–µ—Ä—è—é—â–∏–π: {interaction.user.mention}"
            ),
            color=discord.Color.red(),
            timestamp=datetime.datetime.utcnow()
        )
        em.set_thumbnail(url=config.EMBLEM_URL)
        await interaction.message.edit(embed=em, view=None)

        # 3) —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        ch = guild.get_channel(SUBMIT_CHANNEL_ID)
        if isinstance(ch, discord.TextChannel):
            notify = discord.Embed(
                title="‚ùå –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
                description=f"{member.mention}, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–µ –ø—Ä–æ—à–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é.",
                color=discord.Color.red(),
                timestamp=datetime.datetime.utcnow()
            )
            notify.set_thumbnail(url=config.EMBLEM_URL)
            notify.add_field(name="üéñÔ∏è –ü–æ–∑—ã–≤–Ω–æ–π",    value=self.callsign, inline=True)
            notify.add_field(name="üîó SteamID",      value=self.steamid,  inline=True)
            notify.add_field(name="üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",  value=self.comment,  inline=False)
            notify.add_field(name="üë§ –ü—Ä–æ–≤–µ—Ä—è—é—â–∏–π",  value=interaction.user.mention, inline=False)
            await ch.send(embed=notify)

        await interaction.response.send_message("–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.", ephemeral=True)



class AuthCog(commands.Cog):
    """Cog –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ /auth –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫."""

    def __init__(self, bot: commands.Bot):
        self.bot = bot

    @app_commands.guilds(discord.Object(id=config.DEVELOPMENT_GUILD_ID))
    @app_commands.command(
        name="auth",
        description="–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ JI"
    )
    @app_commands.describe(
        callsign="–í–∞—à –ø–æ–∑—ã–≤–Ω–æ–π",
        steamid="–í–∞—à SteamID (—Ñ–æ—Ä–º–∞—Ç STEAM_X:Y:Z)",
        comment="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä—è—é—â–µ–≥–æ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
    )
    async def auth(
        self,
        interaction: discord.Interaction,
        callsign: str,
        steamid: str,
        comment: Optional[str] = ""
    ):
        member = interaction.user  # type: ignore

        # --- 1) –í–∞–ª–∏–¥–∞—Ü–∏—è ---
        if not re.fullmatch(r"STEAM_[0-5]:[01]:\d+", steamid):
            return await interaction.response.send_message(
                "‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç SteamID: STEAM_X:Y:Z", ephemeral=True
            )
        callsign = callsign.strip()
        if not callsign or len(callsign) > 64:
            return await interaction.response.send_message(
                "‚ùó –ü–æ–∑—ã–≤–Ω–æ–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 1‚Äì64 —Å–∏–º–≤–æ–ª–∞.", ephemeral=True
            )

        # --- 2) –ó–∞–ø–∏—Å—å –≤ –ë–î ---
        db = next(get_db())
        try:
            # —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ–∑—ã–≤–Ω–æ–≥–æ
            other = db.query(User).filter_by(call_sign=callsign).first()
            if other and other.discord_id != member.id:
                return await interaction.response.send_message(
                    "‚ùó –≠—Ç–æ—Ç –ø–æ–∑—ã–≤–Ω–æ–π —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è.", ephemeral=True
                )
            # —Å–æ—Ö—Ä–∞–Ω—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º
            usr = db.query(User).filter_by(discord_id=member.id).first()
            if not usr:
                usr = User(discord_id=member.id, call_sign=callsign, steam_id=steamid)
                db.add(usr)
            else:
                usr.call_sign = callsign
                usr.steam_id  = steamid
            db.commit()
        except Exception:
            db.rollback()
            logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏ –≤ –ë–î")
            return await interaction.response.send_message(
                "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞—è–≤–∫—É.", ephemeral=True
            )
        finally:
            db.close()

        # --- 3) –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ---
        em = discord.Embed(
            title="‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ",
            description=(
                f"üéñÔ∏è –ü–æ–∑—ã–≤–Ω–æ–π: `{callsign}`\n"
                f"üîó SteamID: `{steamid}`\n"
                f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment or '‚Äî'}"
            ),
            color=discord.Color.from_rgb(255, 255, 255),
            timestamp=datetime.datetime.utcnow()
        )
        em.set_thumbnail(url=config.EMBLEM_URL)
        await interaction.response.send_message(embed=em, ephemeral=True)

        # --- 4) –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –∞–¥–º–∏–Ω-–∫–∞–Ω–∞–ª ---
        admin_ch = self.bot.get_channel(ADMIN_CHANNEL_ID)
        if isinstance(admin_ch, discord.TextChannel):
            em2 = discord.Embed(
                title="‚è≥ –ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏",
                description=(
                    f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {member.mention}\n"
                    f"üéñÔ∏è –ü–æ–∑—ã–≤–Ω–æ–π: `{callsign}`\n"
                    f"üîó SteamID: `{steamid}`\n"
                    f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment or '‚Äî'}"
                ),
                color=discord.Color.from_rgb(255, 255, 255),
                timestamp=datetime.datetime.utcnow()
            )
            em2.set_thumbnail(url=config.EMBLEM_URL)
            view = AuthView(
                applicant=interaction.user,
                callsign=callsign,
                steamid=steamid,
                comment=comment or "‚Äî"
            )
            await admin_ch.send(embed=em2, view=view)

    @commands.Cog.listener()
    async def on_ready(self):
        # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º View –¥–ª—è –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –∫–Ω–æ–ø–æ–∫
        self.bot.add_view(AuthView(None, "", "", ""))


async def setup(bot: commands.Bot):
    await bot.add_cog(AuthCog(bot))
