# commands/removewarn.py

import logging
import datetime
import discord
from typing import Optional
from discord import app_commands
from discord.ext import commands

import config  # DEVELOPMENT_GUILD_ID, EMBLEM_URL
from roles.constants import (
    WARN_ROLE_IDS,
    arc_id, lrc_gimel_id, lrc_id,
    head_ji_id, adjutant_ji_id,
    leader_office_id, leader_penal_battalion_id,
    senate_id,
    director_office_id, leader_main_corps_id, leader_gimel_id,
)
from database import get_db, User, Warning

# –†–æ–ª–∏, –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å /removewarn
ALLOWED_ISSUER_ROLES = [
    arc_id, lrc_gimel_id, lrc_id,
    head_ji_id, adjutant_ji_id,
    leader_office_id, leader_penal_battalion_id,
    senate_id,
    director_office_id, leader_main_corps_id, leader_gimel_id,
]

class RemoveWarnCog(commands.Cog):
    """
    Cog –¥–ª—è —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã:
      ‚Ä¢ /removewarn count:<1|2|3> member:@user? reason:<—Ç–µ–∫—Å—Ç>
    –°–Ω–∏–º–∞–µ—Ç WARN-—Ä–æ–ª—å –∏ —É–¥–∞–ª—è–µ—Ç –∑–∞–ø–∏—Å—å WARN –∏–∑ –ë–î.
    """
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    def _make_embed(
        self,
        title: str,
        color: discord.Color = discord.Color.from_rgb(255, 255, 255)
    ) -> discord.Embed:
        em = discord.Embed(
            title=title,
            color=color,
            timestamp=datetime.datetime.utcnow()
        )
        em.set_thumbnail(url=config.EMBLEM_URL)
        return em

    async def _do_remove_warn(
        self,
        interaction: discord.Interaction,
        count: int,
        member: discord.Member,
        reason: str
    ):
        # 1) –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —É—Ä–æ–≤–Ω—è
        if count not in WARN_ROLE_IDS:
            em = self._make_embed("‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å WARN", color=discord.Color.red())
            em.add_field(name="üõë –î–æ–ø—É—Å—Ç–∏–º—ã–µ —É—Ä–æ–≤–Ω–∏", value="1, 2 –∏–ª–∏ 3", inline=False)
            return await interaction.followup.send(embed=em, ephemeral=True)

        # 2) –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–æ–ª–∏
        role_id = WARN_ROLE_IDS[count]
        role = interaction.guild.get_role(role_id) if interaction.guild else None
        if not role:
            em = self._make_embed(f"‚ùó –†–æ–ª—å WARN {count}/3 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", color=discord.Color.red())
            return await interaction.followup.send(embed=em, ephemeral=True)
        if role not in member.roles:
            em = self._make_embed("‚ÑπÔ∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç WARN-—Ä–æ–ª–µ–π", color=discord.Color.orange())
            em.add_field(name="üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=member.mention, inline=False)
            return await interaction.followup.send(embed=em, ephemeral=True)

        # 3) –°–Ω–∏–º–∞–µ–º —Ä–æ–ª—å
        try:
            await member.remove_roles(role, reason=f"–°–Ω—è—Ç WARN {count}/3 –∫–æ–º–∞–Ω–¥–æ–π {interaction.user}")
        except discord.Forbidden:
            em = self._make_embed("‚ùó –ù–µ—Ç –ø—Ä–∞–≤", color=discord.Color.red())
            em.add_field(name="üîí –û—à–∏–±–∫–∞", value="–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ WARN-—Ä–æ–ª—è–º–∏.", inline=False)
            return await interaction.followup.send(embed=em, ephemeral=True)
        except Exception as e:
            logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ WARN")
            em = self._make_embed("‚ùó –û—à–∏–±–∫–∞", color=discord.Color.red())
            em.add_field(name="‚ö†Ô∏è –ü—Ä–∏—á–∏–Ω–∞", value=str(e), inline=False)
            return await interaction.followup.send(embed=em, ephemeral=True)

        # 4) –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ –ë–î
        db = next(get_db())
        try:
            user = db.query(User).filter_by(discord_id=member.id).first()
            if user:
                last = (
                    db.query(Warning)
                      .filter_by(user_id=user.id, level=count)
                      .order_by(Warning.issued_at.desc())
                      .first()
                )
                if last:
                    db.delete(last)
                    db.commit()
        except Exception:
            logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ WARN –∏–∑ –ë–î")
            db.rollback()
        finally:
            db.close()

        # 5) –ò—Ç–æ–≥–æ–≤—ã–π —ç–º–±–µ–¥
        em = self._make_embed(f"‚úÖ –°–Ω—è—Ç WARN {count}/3")
        em.add_field(name="üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=member.mention, inline=True)
        em.add_field(name="üõë –£—Ä–æ–≤–µ–Ω—å", value=f"{count}/3", inline=True)
        em.add_field(name="üìù –ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=False)
        await interaction.followup.send(embed=em)

    @app_commands.guilds(discord.Object(id=config.DEVELOPMENT_GUILD_ID))
    @app_commands.command(
        name="removewarn",
        description="–°–Ω—è—Ç—å WARN-—Ä–æ–ª—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    )
    @app_commands.describe(
        count="–£—Ä–æ–≤–µ–Ω—å WARN (1, 2 –∏–ª–∏ 3)",
        member="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî –≤—ã)",
        reason="–ü—Ä–∏—á–∏–Ω–∞ —Å–Ω—è—Ç–∏—è WARN"
    )
    @app_commands.checks.has_any_role(*ALLOWED_ISSUER_ROLES)
    async def slash_removewarn(
        self,
        interaction: discord.Interaction,
        count: int,
        member: Optional[discord.Member] = None,
        reason: str = "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
    ):
        if member is None:
            member = interaction.user  # type: ignore
        await interaction.response.defer(thinking=True, ephemeral=True)
        await self._do_remove_warn(interaction, count, member, reason)

    @slash_removewarn.error
    async def slash_removewarn_error(self, interaction: discord.Interaction, error):
        if isinstance(error, app_commands.MissingAnyRole):
            allowed = " ".join(f"<@&{rid}>" for rid in ALLOWED_ISSUER_ROLES)
            em = discord.Embed(
                title="‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω",
                description="–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.",
                color=discord.Color.red()
            )
            em.set_thumbnail(url=config.EMBLEM_URL)
            em.add_field(name="–î–æ—Å—Ç—É–ø –∏–º–µ—é—Ç:", value=allowed or "‚Äî", inline=False)
            return await interaction.response.send_message(embed=em, ephemeral=True)

        logging.exception("–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ slash_removewarn")
        if not interaction.response.is_done():
            await interaction.response.send_message("‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)
        else:
            await interaction.followup.send("‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

async def setup(bot: commands.Bot):
    await bot.add_cog(RemoveWarnCog(bot))
