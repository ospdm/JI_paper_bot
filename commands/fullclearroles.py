# commands/fullclearroles.py

import logging
import datetime

import discord
from discord import app_commands
from discord.ext import commands

import config  # DEVELOPMENT_GUILD_ID, EMBLEM_URL
from roles.constants import (
    arc_id,
    lrc_gimel_id,
    lrc_id,
    head_ji_id,
    adjutant_ji_id,
    leader_office_id,
    leader_penal_battalion_id,
    senate_id,
    director_office_id,
    leader_main_corps_id,
    leader_gimel_id,
)

# –†–æ–ª–∏, –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å /fullclearroles –∏ /returnroles
ALLOWED_ISSUER_ROLES = [
    arc_id, lrc_gimel_id, lrc_id,
    head_ji_id, adjutant_ji_id,
    leader_office_id, leader_penal_battalion_id,
    senate_id,
    director_office_id, leader_main_corps_id, leader_gimel_id,
]


class FullClearRolesCog(commands.Cog):
    """
    Cog –¥–ª—è —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥:
      ‚Ä¢ /fullclearroles @user <–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π> ‚Äî —Å–Ω—è—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Å–µ —Ä–æ–ª–∏ (–∫—Ä–æ–º–µ @everyone)
      ‚Ä¢ /returnroles     @user           ‚Äî –≤–µ—Ä–Ω—É—Ç—å —Å–Ω—è—Ç—ã–µ —Ä–∞–Ω–µ–µ —Ä–æ–ª–∏
    """

    def __init__(self, bot: commands.Bot):
        self.bot = bot
        # –ø–∞–º—è—Ç—å –ø—Ä–æ —Å–Ω—è—Ç—ã–µ —Ä–æ–ª–∏: member_id -> [role_id, ...]
        self._cleared_roles: dict[int, list[int]] = {}

    @app_commands.guilds(discord.Object(id=config.DEVELOPMENT_GUILD_ID))
    @app_commands.command(
        name="fullclearroles",
        description="–°–Ω—è—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Å–µ —Ä–æ–ª–∏ (–∫—Ä–æ–º–µ @everyone)"
    )
    @app_commands.describe(
        member="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —Å–Ω—è—Ç—å —Ä–æ–ª–∏",
        comment="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞"
    )
    @app_commands.checks.has_any_role(*ALLOWED_ISSUER_ROLES)
    async def slash_fullclearroles(
        self,
        interaction: discord.Interaction,
        member: discord.Member,
        comment: str
    ):
        await interaction.response.defer(thinking=True)

        # —Ä–æ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–Ω–∏–º–µ–º
        to_remove = [
            role for role in member.roles
            if role != interaction.guild.default_role
        ]
        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö ID –≤ –ø–∞–º—è—Ç—å
        self._cleared_roles[member.id] = [r.id for r in to_remove]

        try:
            if to_remove:
                await member.remove_roles(
                    *to_remove,
                    reason=f"Full clear by {interaction.user}: {comment}"
                )

            em = discord.Embed(
                title="‚ö†Ô∏è –í—Å–µ —Ä–æ–ª–∏ –æ—á–∏—â–µ–Ω—ã",
                description=(
                    f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {member.mention}\n"
                    f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}\n"
                    f"üëÆ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {interaction.user.mention}"
                ),
                color=discord.Color.from_rgb(255, 255, 255),
                timestamp=datetime.datetime.utcnow()
            )
            em.set_thumbnail(url=config.EMBLEM_URL)
            await interaction.followup.send(embed=em)

        except discord.Forbidden:
            await interaction.followup.send(
                "‚ùó –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
                ephemeral=True
            )
        except Exception as e:
            logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ fullclearroles")
            await interaction.followup.send(
                f"‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}", ephemeral=True
            )

    @slash_fullclearroles.error
    async def slash_fullclearroles_error(
        self,
        interaction: discord.Interaction,
        error
    ):
        if isinstance(error, app_commands.MissingAnyRole):
            allowed = " ".join(f"<@&{rid}>" for rid in ALLOWED_ISSUER_ROLES)
            em = discord.Embed(
                title="‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω",
                description="–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.",
                color=discord.Color.red()
            )
            em.set_thumbnail(url=config.EMBLEM_URL)
            em.add_field(
                name="–î–æ—Å—Ç—É–ø –∏–º–µ—é—Ç —Å–ª–µ–¥—É—é—â–∏–µ —Ä–æ–ª–∏:",
                value=allowed or "‚Äî",
                inline=False
            )
            return await interaction.response.send_message(embed=em, ephemeral=True)

        logging.exception("–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ slash_fullclearroles")
        if not interaction.response.is_done():
            await interaction.response.send_message("‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)
        else:
            await interaction.followup.send("‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)


    @app_commands.guilds(discord.Object(id=config.DEVELOPMENT_GUILD_ID))
    @app_commands.command(
        name="returnroles",
        description="–í–µ—Ä–Ω—É—Ç—å —Ä–∞–Ω–µ–µ —Å–Ω—è—Ç—ã–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª–∏"
    )
    @app_commands.describe(
        member="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤–µ—Ä–Ω—É—Ç—å —Ä–æ–ª–∏"
    )
    @app_commands.checks.has_any_role(*ALLOWED_ISSUER_ROLES)
    async def slash_returnroles(
        self,
        interaction: discord.Interaction,
        member: discord.Member
    ):
        await interaction.response.defer(thinking=True)

        saved = self._cleared_roles.get(member.id)
        if not saved:
            em = discord.Embed(
                title="‚ÑπÔ∏è –ù–µ—á–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å",
                description=f"–£ {member.mention} –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —Ä–æ–ª–µ–π –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞.",
                color=discord.Color.from_rgb(255, 255, 255),
                timestamp=datetime.datetime.utcnow()
            )
            em.set_thumbnail(url=config.EMBLEM_URL)
            return await interaction.followup.send(embed=em)

        # –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–æ–ª–∏
        guild = interaction.guild
        roles = []
        for rid in saved:
            role = guild.get_role(rid)
            if role:
                roles.append(role)
        try:
            if roles:
                await member.add_roles(
                    *roles,
                    reason=f"Return roles by {interaction.user}"
                )
            # –æ—á–∏—Å—Ç–∏–º –ø–∞–º—è—Ç—å
            del self._cleared_roles[member.id]

            em = discord.Embed(
                title="‚úÖ –†–æ–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã",
                description=(
                    f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {member.mention}\n"
                    f"üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–ª–µ–π: {len(roles)}\n"
                    f"üëÆ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {interaction.user.mention}"
                ),
                color=discord.Color.from_rgb(255, 255, 255),
                timestamp=datetime.datetime.utcnow()
            )
            em.set_thumbnail(url=config.EMBLEM_URL)
            # –ø–æ–∫–∞–∂–µ–º —Å–ø–∏—Å–æ–∫ –∏–º—ë–Ω –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ä–æ–ª–µ–π
            if roles:
                em.add_field(
                    name="üìã –†–æ–ª–∏",
                    value=", ".join(r.name for r in roles),
                    inline=False
                )
            await interaction.followup.send(embed=em)

        except discord.Forbidden:
            await interaction.followup.send(
                "‚ùó –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.",
                ephemeral=True
            )
        except Exception as e:
            logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ returnroles")
            await interaction.followup.send(
                f"‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}", ephemeral=True
            )

    @slash_returnroles.error
    async def slash_returnroles_error(
        self,
        interaction: discord.Interaction,
        error
    ):
        if isinstance(error, app_commands.MissingAnyRole):
            allowed = " ".join(f"<@&{rid}>" for rid in ALLOWED_ISSUER_ROLES)
            em = discord.Embed(
                title="‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω",
                description="–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.",
                color=discord.Color.red()
            )
            em.set_thumbnail(url=config.EMBLEM_URL)
            em.add_field(
                name="–î–æ—Å—Ç—É–ø –∏–º–µ—é—Ç —Å–ª–µ–¥—É—é—â–∏–µ —Ä–æ–ª–∏:",
                value=allowed or "‚Äî",
                inline=False
            )
            return await interaction.response.send_message(embed=em, ephemeral=True)

        logging.exception("–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ slash_returnroles")
        if not interaction.response.is_done():
            await interaction.response.send_message("‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)
        else:
            await interaction.followup.send("‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)


async def setup(bot: commands.Bot):
    await bot.add_cog(FullClearRolesCog(bot))
