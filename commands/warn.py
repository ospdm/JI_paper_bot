# commands/warn.py

import logging
import datetime
import discord
from discord import app_commands
from discord.ext import commands

import config  # DEVELOPMENT_GUILD_ID, EMBLEM_URL
from roles.constants import (
    WARN_ROLE_IDS,
    black_mark_id,
    arc_id, lrc_gimel_id, lrc_id,
    head_ji_id, adjutant_ji_id,
    leader_office_id, leader_penal_battalion_id,
    senate_id,
    director_office_id, leader_main_corps_id, leader_gimel_id,
)
from database import get_db, User, Warning

# –†–æ–ª–∏, –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –≤—ã–¥–∞–≤–∞—Ç—å WARN
ALLOWED_ISSUER_ROLES = [
    arc_id, lrc_gimel_id, lrc_id,
    head_ji_id, adjutant_ji_id,
    leader_office_id, leader_penal_battalion_id,
    senate_id,
    director_office_id, leader_main_corps_id, leader_gimel_id,
]

# –ë–∞–Ω–Ω–µ—Ä –¥–ª—è —ç–º–±–µ–¥–∞
WARN_BANNER_URL = (
    "https://media.discordapp.net/attachments/"
    "1384127668391510070/1385719730823761972/image.png"
)

class WarnCog(commands.Cog):
    """
    Cog –¥–ª—è –≤—ã–¥–∞—á–∏ WARN-—Ä–æ–ª–µ–π:
      ‚Ä¢ /warn count:<1|2|3> member:<@user> reason:<–ø—Ä–∏—á–∏–Ω–∞> give_black_mark:<y/n>
    """
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    def _make_embed(
        self,
        title: str,
        color: discord.Color = discord.Color.from_rgb(255, 255, 255)
    ) -> discord.Embed:
        em = discord.Embed(
            title=title,
            color=color,
            timestamp=datetime.datetime.utcnow()
        )
        em.set_thumbnail(url=config.EMBLEM_URL)
        em.set_image(url=WARN_BANNER_URL)
        return em

    async def _do_warn(
        self,
        count: int,
        member: discord.Member,
        reason: str,
        give_black_mark: bool,
        send: callable,
        issuer_id: int
    ):
        # 1) –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Ä–æ–≤–Ω—è
        if count not in (1, 2, 3):
            em = self._make_embed(
                "‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å WARN",
                color=discord.Color.red()
            )
            em.add_field(name="üõë –î–æ–ø—É—Å—Ç–∏–º—ã–µ —É—Ä–æ–≤–Ω–∏", value="1, 2 –∏–ª–∏ 3", inline=False)
            return await send(embed=em, ephemeral=True)

        # 2) –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å WARN
        role_id = WARN_ROLE_IDS.get(count)
        role = member.guild.get_role(role_id) if role_id else None
        if not role:
            em = self._make_embed(
                f"‚ùó –†–æ–ª—å WARN {count}/3 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
                color=discord.Color.red()
            )
            return await send(embed=em, ephemeral=True)

        # 3) –°–Ω–∏–º–∞–µ–º —Å—Ç–∞—Ä—ã–µ WARN –∏ –≤—ã–¥–∞—ë–º –Ω–æ–≤—É—é
        to_remove = [
            member.guild.get_role(rid)
            for lvl, rid in WARN_ROLE_IDS.items() if lvl != count
            if member.guild.get_role(rid) in member.roles
        ]
        try:
            if to_remove:
                await member.remove_roles(*to_remove, reason=f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ WARN –¥–æ {count}/3")
            await member.add_roles(role, reason=f"–í—ã–¥–∞–Ω WARN {count}/3")
        except discord.Forbidden:
            em = self._make_embed(
                "‚ùó –ù–µ—Ç –ø—Ä–∞–≤",
                color=discord.Color.red()
            )
            em.add_field(name="üîí –û—à–∏–±–∫–∞", value="–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ WARN-—Ä–æ–ª—è–º–∏.", inline=False)
            return await send(embed=em, ephemeral=True)
        except Exception as e:
            logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ WARN")
            em = self._make_embed(
                "‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ",
                color=discord.Color.red()
            )
            em.add_field(name="‚ö†Ô∏è –ü—Ä–∏—á–∏–Ω–∞", value=str(e), inline=False)
            return await send(embed=em, ephemeral=True)

        # 4) –ó–∞–ø–∏—Å—å –≤ –ë–î + –≤—ã–¥–∞—á–∞ —á—ë—Ä–Ω–æ–π –º–µ—Ç–∫–∏
        db = next(get_db())
        try:
            user = db.query(User).filter_by(discord_id=member.id).first()
            if not user:
                user = User(discord_id=member.id)
                db.add(user); db.flush()

            # –≤—ã–¥–∞—ë–º/—Å–Ω–∏–º–∞–µ–º —á—ë—Ä–Ω—É—é –º–µ—Ç–∫—É –≤ –ë–î
            if give_black_mark:
                user.black_mark = True
            db.commit()

            # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å WARN
            issuer = db.query(User).filter_by(discord_id=issuer_id).first()
            if not issuer:
                issuer = User(discord_id=issuer_id)
                db.add(issuer); db.flush()

            db.add(Warning(user_id=user.id, level=count, issued_by=issuer.id))
            db.commit()
        except Exception:
            logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ WARN/black_mark –≤ –ë–î")
            db.rollback()
        finally:
            db.close()

        # 5) –†–µ–∞–ª—å–Ω–∞—è –≤—ã–¥–∞—á–∞ —Ä–æ–ª–∏ —á—ë—Ä–Ω–∞—è –º–µ—Ç–∫–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        black_status = "–ù–µ—Ç"
        if give_black_mark:
            black_role = member.guild.get_role(black_mark_id)
            if black_role:
                try:
                    await member.add_roles(black_role, reason=f"–í—ã–¥–∞–Ω–∞ —á—ë—Ä–Ω–∞—è –º–µ—Ç–∫–∞ {issuer_id}")
                    black_status = "–î–∞"
                except:
                    logging.exception("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å —Ä–æ–ª—å —á—ë—Ä–Ω–æ–π –º–µ—Ç–∫–∏")
            else:
                logging.error(f"–†–æ–ª—å —á—ë—Ä–Ω–æ–π –º–µ—Ç–∫–∏ {black_mark_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")

        # 6) –ò—Ç–æ–≥–æ–≤—ã–π —ç–º–±–µ–¥
        em = self._make_embed(f"‚úÖ –í—ã–¥–∞–Ω WARN {count}/3")
        em.add_field(name="üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",    value=member.mention, inline=True)
        em.add_field(name="üõë –í–∞—Ä–Ω–æ–≤",         value=f"{count}/3",     inline=True)
        em.add_field(name="‚ö´ –ß—ë—Ä–Ω–∞—è –º–µ—Ç–∫–∞",    value=black_status,      inline=True)
        em.add_field(name="üìù –ü—Ä–∏—á–∏–Ω–∞",        value=reason,            inline=False)
        await send(embed=em)

    @app_commands.guilds(discord.Object(id=config.DEVELOPMENT_GUILD_ID))
    @app_commands.command(
        name="warn",
        description="–í—ã–¥–∞—Ç—å WARN-—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (1‚Äì3) –∏ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —á—ë—Ä–Ω—É—é –º–µ—Ç–∫—É"
    )
    @app_commands.describe(
        count="–£—Ä–æ–≤–µ–Ω—å WARN (1, 2 –∏–ª–∏ 3)",
        member="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã–¥–∞—ë—Ç—Å—è WARN",
        reason="–ü—Ä–∏—á–∏–Ω–∞ –≤—ã–¥–∞—á–∏ WARN",
        give_black_mark="–í—ã–¥–∞—Ç—å —á—ë—Ä–Ω—É—é –º–µ—Ç–∫—É? (y/n)"
    )
    @app_commands.checks.has_any_role(*ALLOWED_ISSUER_ROLES)
    async def warn(
        self,
        interaction: discord.Interaction,
        count: int,
        member: discord.Member,
        reason: str,
        give_black_mark: bool = False
    ):
        await interaction.response.defer(thinking=True)
        await self._do_warn(count, member, reason, give_black_mark, interaction.followup.send, interaction.user.id)

    @warn.error
    async def warn_error(self, interaction: discord.Interaction, error):
        if isinstance(error, app_commands.MissingAnyRole):
            allowed = " ".join(f"<@&{rid}>" for rid in ALLOWED_ISSUER_ROLES)
            em = discord.Embed(
                title="‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω",
                description="–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.",
                color=discord.Color.red()
            )
            em.set_thumbnail(url=config.EMBLEM_URL)
            em.add_field(name="–î–æ—Å—Ç—É–ø –∏–º–µ—é—Ç:", value=allowed or "‚Äî", inline=False)
            return await interaction.response.send_message(embed=em, ephemeral=True)

        logging.exception("–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ warn")
        if not interaction.response.is_done():
            await interaction.response.send_message("‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)
        else:
            await interaction.followup.send("‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)


async def setup(bot: commands.Bot):
    await bot.add_cog(WarnCog(bot))
